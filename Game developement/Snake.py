import osimport sysimport randomimport pygamepygame.init()pygame.mixer.init()sys.setrecursionlimit(10 ** 6)window_name = "Snake Game"box = pygame.Rect(525, 150, 400, 90)box_color = pygame.Color('gray15')active = Falserect = pygame.rect.Rect(0, 0, 1, 1)raily = Falsepause = Falsesnake_color = (10, 230, 50)snake_color2 = (10, 170, 50)yellow_color = (255, 255, 0)yellow_color2 = (204, 204, 0)blue_color = (0, 0, 255)blue_color2 = (0, 0, 139)window_color = (0, 0, 0)food_color = (255, 0, 0)score_color = (0, 0, 0)blue = (0, 255, 255)bright_blue = (0, 0, 255)dark_blue = (95, 158, 160)red = (255, 0, 0)light_red = (255, 69, 0)yellow = (255, 255, 0)light_yellow = (255, 255, 153)rust = (210, 150, 75)brown = (100, 40, 0)color_1 = score_colorheight = 768width = 1366yellow_snake = Falseblue_snake = Falsegreen_snake = Truestop_music = Truewin = pygame.display.set_mode((width, height))pygame.display.set_caption("Snake Game")pygame.display.update()clock = pygame.time.Clock()try:    f = open("resources\\username.txt", "x")    f.close()except Exception as e:    print(e)logo_img = pygame.image.load("resources\\MSD-logo.png")logo_img = pygame.transform.scale(logo_img, (200, 270))win_img = pygame.image.load("resources\\win.jpg")win_img = pygame.transform.scale(win_img, (width, height))profile_img = pygame.image.load("resources\\profile.jpg")profile_img = pygame.transform.scale(profile_img, (width, height))apple_img = pygame.image.load("resources\\apple.png")apple_img = pygame.transform.scale(apple_img, (50, 50))profile_1_img = pygame.image.load("resources\\profile_1.jpg")profile_1_img = pygame.transform.scale(profile_1_img, (width, height))profile_2_img = pygame.image.load("resources\\profile_2.jpg")profile_2_img = pygame.transform.scale(profile_2_img, (width, height))settings_img = pygame.image.load("resources\\settings.jpg")settings_img = pygame.transform.scale(settings_img, (width, height))settings_1_img = pygame.image.load("resources\\settings_1.jpg")settings_1_img = pygame.transform.scale(settings_1_img, (width, height))menu_img = pygame.image.load("resources\\_menu_.jpg")menu_img = pygame.transform.scale(menu_img, (width, height))m_img = pygame.image.load("resources\\grass.jpg")m_img = pygame.transform.scale(m_img, (width, height))menus_img = pygame.image.load("resources\\menu.png")menus_img = pygame.transform.scale(menus_img, (width, height))game_img = pygame.image.load("resources\\Game_over.png")game_img = pygame.transform.scale(game_img, (width, height))before_img = pygame.image.load("resources\\before_menu.png")before_img = pygame.transform.scale(before_img, (width, height))con_img = pygame.image.load("resources\\Controls.jpg")con_img = pygame.transform.scale(con_img, (width, height))contro_img = pygame.image.load("resources\\control.png")contro_img = pygame.transform.scale(contro_img, (549, 254))welcome_img = pygame.image.load("resources\\welcome.png")welcome_img = pygame.transform.scale(welcome_img, (418, 246))beg_img = pygame.image.load("resources\\begginer_.png")beg_img = pygame.transform.scale(beg_img, (620, 120))beg_2img = pygame.image.load("resources\\begginer_.png")beg_2img = pygame.transform.scale(beg_2img, (670, 170))inter_img = pygame.image.load("resources\\intermediate.png")inter_img = pygame.transform.scale(inter_img, (800, 120))inter_2img = pygame.image.load("resources\\intermediate.png")inter_2img = pygame.transform.scale(inter_2img, (850, 170))advance_img = pygame.image.load("resources\\Advanced.png")advance_img = pygame.transform.scale(advance_img, (500, 120))advance_2img = pygame.image.load("resources\\Advanced.png")advance_2img = pygame.transform.scale(advance_2img, (550, 170))pb_img = pygame.image.load("resources\\pb.png")pb_img = pygame.transform.scale(pb_img, (200, 150))pb_2img = pygame.image.load("resources\\pb.png")pb_2img = pygame.transform.scale(pb_2img, (250, 200))pp_img = pygame.image.load("resources\\pp.png")pp_img = pygame.transform.scale(pp_img, (200, 150))pp_2img = pygame.image.load("resources\\pp.png")pp_2img = pygame.transform.scale(pp_2img, (250, 200))rb_img = pygame.image.load("resources\\rb.png")rb_img = pygame.transform.scale(rb_img, (200, 150))rb_2img = pygame.image.load("resources\\rb.png")rb_2img = pygame.transform.scale(rb_2img, (250, 200))mb_img = pygame.image.load("resources\\mb.png")mb_img = pygame.transform.scale(mb_img, (200, 150))mb_2img = pygame.image.load("resources\\mb.png")mb_2img = pygame.transform.scale(mb_2img, (250, 200))hb_img = pygame.image.load("resources\\hb.png")hb_img = pygame.transform.scale(hb_img, (200, 150))hb_2img = pygame.image.load("resources\\hb.png")hb_2img = pygame.transform.scale(hb_2img, (250, 200))marking_img = pygame.image.load("resources\\mak.png")marking_img = pygame.transform.scale(marking_img, (100, 100))paused_img = pygame.image.load("resources\\pause.png")paused_img = pygame.transform.scale(paused_img, (width, height))level_img = pygame.image.load("resources\\levels.png")level_img = pygame.transform.scale(level_img, (width, height))gameov_img = pygame.image.load("resources\\gmover.png")gameov_img = pygame.transform.scale(gameov_img, (width, height))score_img = pygame.image.load("resources\\sc.png")score_img = pygame.transform.scale(score_img, (600, 600))startup_img = pygame.image.load("resources\\logo.jpg")startup_img = pygame.transform.scale(startup_img, (width, height))more_button = pygame.image.load("resources\\more.png")more_button = pygame.transform.scale(more_button, (100, 100))more_button_1 = pygame.image.load("resources\\main_mode.png")more_button_1 = pygame.transform.scale(more_button_1, (100, 100))font = pygame.font.SysFont("bauhaus93", 50)font2 = pygame.font.SysFont("arial", 150)font3 = pygame.font.SysFont("snapitc", 70)font4 = pygame.font.SysFont("snapitc", 78)font5 = pygame.font.SysFont("bauhaus93", 100)with open("resources\\username.txt") as f:    content = f.read()user_name = contentmode = "Beginner"  # continue with here from changing mode and solving bugsxi = 185yj = 150a = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]b = random.choice(a)def text_screen(text, color, x, y):    screen_text = font.render(text, True, color)    win.blit(screen_text, [x, y])def text_screen5(text, color, x, y):    screen_text = font5.render(text, True, color)    win.blit(screen_text, [x, y])def text_screen4(text, color, x, y):    screen_text = font4.render(text, True, color)    win.blit(screen_text, [x, y])def text_screen3(text, color, x, y):    screen_text = font3.render(text, True, color)    win.blit(screen_text, [x, y])def text_screen2(text, color, x, y):    screen_text = font2.render(text, True, color)    win.blit(screen_text, [x, y])def button1(x, y, r, ic, ac, action=None):    mouse = pygame.mouse.get_pos()    click = pygame.mouse.get_pressed(3)    if x + r > mouse[0] > x and y + r > mouse[1] > y:        pygame.draw.circle(win, ac, (x, y), r)        if click[0] == 1 and action is not None:            action()    else:        pygame.draw.circle(win, ic, (x, y), r)def button(x, y, w, h, ic, ac, action=None):    mouse = pygame.mouse.get_pos()    click = pygame.mouse.get_pressed(3)    if x + w > mouse[0] > x and y + h > mouse[1] > y:        pygame.draw.rect(win, ac, (x, y, w, h))        if click[0] == 1 and action is not None:            action()    else:        pygame.draw.rect(win, ic, (x, y, w, h))def button5(x, y, r, ic, action=None):    mouse = pygame.mouse.get_pos()    click = pygame.mouse.get_pressed(3)    if x + r > mouse[0] > x and y + r > mouse[1] > y:        if click[0] == 1 and action is not None:            action()    else:        pygame.draw.circle(win, ic, (x, y), r)def button3(x, y, w, h, ic, action=None):    mouse = pygame.mouse.get_pos()    click = pygame.mouse.get_pressed(3)    if x + w > mouse[0] > x and y + h > mouse[1] > y:        pass        if click[0] == 1 and action is not None:            action()    else:        pygame.draw.rect(win, ic, (x, y, w, h))def button2(msg, x, y, w, h, ic, ac, action=None):    mouse = pygame.mouse.get_pos()    click = pygame.mouse.get_pressed(3)    if x + w > mouse[0] > x and y + h > mouse[1] > y:        pygame.draw.rect(win, ac, (x, y, w, h))        if click[0] == 1 and action is not None:            action()    else:        pygame.draw.rect(win, ic, (x, y, w, h))    text_screen(msg, score_color, (x + 12), y)def button4(msg, x, y, w, h, ic):    pygame.draw.rect(win, ic, (x, y, w, h))    text_screen(msg, score_color, x, (y + 15))def save():    with open("resources\\username.txt", "r+") as d:        d.write(user_name)    menus()def game_exit():    pygame.quit()    quit()def plot_snk(screen_win, snake_color1, snk_list0, snake_size0, snake_color_2):    global rect    for x, y in snk_list0:        pygame.draw.rect(screen_win, snake_color1, [x, y, snake_size0, snake_size0])        rect = pygame.rect.Rect(x, y, (snake_size0 + 2), (snake_size0 + 2))        pygame.draw.rect(screen_win, snake_color_2, rect, 4)def start():    pygame.mixer.music.load(b)    pygame.mixer.music.play()    before_welcome()def startup():    win.blit(startup_img, (0, 0))def fade(width_, height_):    fade_screen = pygame.Surface((width_, height_))    fade_screen.fill((0, 0, 0))    for alpha in range(0, 300):        fade_screen.set_alpha(alpha)        startup()        win.blit(fade_screen, (0, 0))        pygame.display.update()        pygame.time.delay(4)    start()def interface(w, h):    fade(w, h)def beginner():    global mode    global xi    global yj    global raily    raily = False    mode = "Beginner"    xi = 185    yj = 150def intermediate():    global mode    global xi    global yj    global raily    raily = False    mode = "Intermediate"    xi = 80    yj = 350def advance():    global mode    global xi    global yj    global raily    raily = False    mode = "Advance"    xi = 250    yj = 510def raily_():    global mode    global xi    global yj    global raily    raily = True    mode = "Raily"    xi = 1180    yj = 350def menus():    md = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    mn = random.choice(md)    exit_game = False    while not exit_game:        button(1225, 10, 130, 130, blue, bright_blue, before_welcome)        button(525, 150, 400, 90, blue, bright_blue, profile)        button(525, 300, 400, 90, blue, bright_blue, settings)        win.blit(menu_img, (0, 0))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(mn)                    pygame.mixer.music.play()                    before_welcome()def music_off():    global stop_music    pygame.mixer.music.stop()    pygame.mixer.music.unload()    stop_music = Falsedef music_on():    global stop_music    mdk = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    mng = random.choice(mdk)    pygame.mixer.music.load(mng)    pygame.mixer.music.play()    stop_music = Truedef profile_2():    global blue_snake, yellow_snake, green_snake    blue_snake = False    yellow_snake = True    green_snake = Falsedef profile_1():    global blue_snake, yellow_snake, green_snake    blue_snake = True    yellow_snake = False    green_snake = Falsedef profile_():    global blue_snake, yellow_snake, green_snake    blue_snake = False    yellow_snake = False    green_snake = Truedef profile():    global user_name, active, color_1, blue_snake, yellow_snake, green_snake    exit_game = False    while not exit_game:        if blue_snake:            yellow_snake = False            green_snake = False            button(15, 20, 130, 130, blue, bright_blue, menus)            button(290, 395, 115, 115, blue, bright_blue, profile_2)            button(667, 395, 115, 115, blue, bright_blue, profile_)            win.blit(profile_1_img, (0, 0))        if yellow_snake:            blue_snake = False            green_snake = False            button(15, 20, 130, 130, blue, bright_blue, menus)            button(473, 395, 115, 115, blue, bright_blue, profile_1)            button(667, 395, 115, 115, blue, bright_blue, profile_)            win.blit(profile_2_img, (0, 0))        if green_snake:            blue_snake = False            yellow_snake = False            button(15, 20, 130, 130, blue, bright_blue, menus)            button(290, 395, 115, 115, blue, bright_blue, profile_2)            button(473, 395, 115, 115, blue, bright_blue, profile_1)            win.blit(profile_img, (0, 0))        if content == user_name:            button4("Save", 1035, 0, 145, 75, dark_blue)        else:            button2("Save", 1035, 0, 145, 75, dark_blue, blue, save)        screen_text_3 = font.render(user_name, True, (255, 255, 255))        pygame.draw.rect(win, color_1, box)        win.blit(screen_text_3, (box.x + 5, box.y + 5))        box.w = max(100, screen_text_3.get_width() + 10)        win.blit(logo_img, (1055, 250))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.MOUSEBUTTONDOWN:                if box.collidepoint(event.pos):                    active = True            if event.type == pygame.KEYDOWN:                if active:                    if event.key == pygame.K_BACKSPACE:                        user_name = user_name[:-1]                    else:                        user_name += event.unicode        if active:            color_1 = box_color        else:            color_1 = score_colordef settings():    global stop_music    mdg = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    mnk = random.choice(mdg)    exit_game = False    while not exit_game:        button(15, 20, 130, 130, blue, bright_blue, menus)        button(490, 150, 355, 70, blue, bright_blue, control_screen_1)        if stop_music:            button(750, 260, 305, 60, blue, bright_blue, music_off)            win.blit(settings_img, (0, 0))        else:            button(750, 260, 305, 60, blue, bright_blue, music_on)            win.blit(settings_1_img, (0, 0))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(mnk)                    pygame.mixer.music.play()                    menus()def load_music():    pygame.mixer.music.load("resources\\main.mp3")    pygame.mixer.music.play(-1)    game_loop()def un_pause():    global pause    pause = False    pygame.mixer.music.unpause()def main_go():    aab = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    bb = random.choice(aab)    pygame.mixer.music.load(bb)    pygame.mixer.music.play()    before_welcome()def paused():    c = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    d = random.choice(c)    while pause:        mouse = pygame.mouse.get_pos()        button3(365, 150, 620, 120, light_yellow, un_pause)        button3(280, 300, 800, 120, blue, welcome_screen)        button3(280, 600, 800, 120, dark_blue, main_go)        button3(280, 450, 800, 120, light_red, control_screen)        win.blit(paused_img, (0, 0))        text_screen3("PAUSED", brown, 500, 0)        win.blit(beg_img, (365, 150))        text_screen3("RESUME", rust, 505, 153)        win.blit(inter_img, (280, 300))        text_screen3("MODES", rust, 520, 303)        win.blit(inter_img, (280, 450))        text_screen3("CONTROLS", rust, 450, 453)        win.blit(inter_img, (280, 600))        text_screen3("MAIN MENU", rust, 420, 603)        if 365 + 620 > mouse[0] > 365 and 150 + 120 > mouse[1] > 150:            win.blit(beg_2img, (340, 125))            text_screen4("RESUME", rust, 465, 153)        if 280 + 800 > mouse[0] > 280 and 300 + 120 > mouse[1] > 300:            win.blit(inter_2img, (255, 275))            text_screen4("MODES", rust, 490, 306)        if 280 + 800 > mouse[0] > 280 and 450 + 120 > mouse[1] > 450:            win.blit(inter_2img, (255, 425))            text_screen4("CONTROLS", rust, 410, 456)        if 280 + 800 > mouse[0] > 280 and 600 + 120 > mouse[1] > 600:            win.blit(inter_2img, (255, 575))            text_screen4("MAIN MENU", rust, 370, 606)        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                pygame.quit()                quit()            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_c:                    un_pause()                if event.key == pygame.K_q:                    pygame.quit()                    quit()                if event.key == pygame.K_m:                    pygame.mixer.music.load(d)                    pygame.mixer.music.play()                    welcome_screen()def control_screen():    exit_game = False    g = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    h = random.choice(g)    while not exit_game:        button(975, 0, 400, 85, blue, bright_blue, before_welcome)        win.blit(con_img, (0, 0))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(h)                    pygame.mixer.music.play()                    before_welcome()def control_screen_1():    exit_game = False    gff = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    hkd = random.choice(gff)    while not exit_game:        button(975, 0, 400, 85, blue, bright_blue, menus)        win.blit(con_img, (0, 0))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(hkd)                    pygame.mixer.music.play()                    menus()def before_welcome():    exit_game = False    j = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    k = random.choice(j)    while not exit_game:        mouse = pygame.mouse.get_pos()        button3(810, 315, 475, 160, blue, control_screen)        button3(955, 515, 330, 160, blue, welcome_screen)        button3(0, 0, 150, 150, blue, menus)        button3(1130, 100, 100, 100, blue, profile)        win.blit(before_img, (0, 0))        if 0 + 150 > mouse[0] > 0 and 0 + 150 > mouse[1] > 0:            win.blit(menus_img, (0, 0))        if 810 + 475 > mouse[0] > 810 and 315 + 160 > mouse[1] > 315:            win.blit(contro_img, (760, 265))        if 955 + 330 > mouse[0] > 955 and 515 + 160 > mouse[1] > 515:            win.blit(welcome_img, (905, 465))        button2("Exit Game", 500, 720, 255, 55, dark_blue, blue, game_exit)        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_RETURN:                    pygame.mixer.music.load(k)                    pygame.mixer.music.play()                    welcome_screen()                if event.key == pygame.K_LCTRL:                    pygame.mixer.music.load(k)                    pygame.mixer.music.play()                    control_screen()def welcome_screen():    exit_game = False    n = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    m = random.choice(n)    global xi, yj, mode    while not exit_game:        if mode == "Beginner":            xi = 185            yj = 150        elif mode == "Intermediate":            xi = 80            yj = 350        elif mode == "Advance":            xi = 250            yj = 510        elif mode == "Raily":            xi = 20000            yj = 20000        mouse = pygame.mouse.get_pos()        win.fill((75, 139, 190))        button3(385, 140, 620, 120, blue, beginner)        button3(280, 300, 800, 120, blue, intermediate)        button3(450, 500, 500, 120, blue, advance)        button3(260, 620, 200, 150, blue, before_welcome)        button3(570, 620, 200, 150, blue, load_music)        button3(900, 620, 200, 150, blue, control_screen)        button3(1170, 350, 100, 100, blue, more_screen)        win.blit(level_img, (0, 0))        text_screen5("MODES", brown, 520, 0)        win.blit(beg_img, (385, 140))        text_screen3("BEGINNERS", rust, 435, 150)        win.blit(inter_img, (280, 330))        text_screen3("INTERMEDIATE", rust, 345, 340)        win.blit(advance_img, (450, 500))        text_screen3("ADVANCE", rust, 500, 510)        win.blit(hb_img, (260, 620))        win.blit(pb_img, (570, 620))        win.blit(mb_img, (900, 620))        win.blit(more_button, (1170, 350))        if 385 + 620 > mouse[0] > 385 and 140 + 120 > mouse[1] > 140:            win.blit(beg_2img, (360, 115))            text_screen4("BEGINNERS", rust, 385, 140)        if 280 + 800 > mouse[0] > 280 and 300 + 120 > mouse[1] > 300:            win.blit(inter_2img, (255, 305))            text_screen4("INTERMEDIATE", rust, 295, 330)        if 450 + 500 > mouse[0] > 450 and 500 + 120 > mouse[1] > 500:            win.blit(advance_2img, (425, 475))            text_screen4("ADVANCE", rust, 450, 500)        if 260 + 200 > mouse[0] > 260 and 620 + 150 > mouse[1] > 620:            win.blit(hb_2img, (235, 595))        if 570 + 200 > mouse[0] > 570 and 620 + 150 > mouse[1] > 620:            win.blit(pb_2img, (545, 595))        if 900 + 200 > mouse[0] > 900 and 620 + 150 > mouse[1] > 620:            win.blit(mb_2img, (875, 595))        win.blit(marking_img, (xi, yj))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_SPACE:                    pygame.mixer.music.load("resources\\main.mp3")                    pygame.mixer.music.play()                    game_loop()                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(m)                    pygame.mixer.music.play()                    before_welcome()                if event.key == pygame.K_q:                    pygame.quit()                    quit()def more_screen():    exit_game = False    nm = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    mn = random.choice(nm)    global xi, yj, mode    while not exit_game:        xi = 20000        yj = 20000        if mode == "Beginner":            xi = 20000            yj = 20000        elif mode == "Intermediate":            xi = 20000            yj = 20000        elif mode == "Advance":            xi = 20000            yj = 20000        elif mode == "Raily":            xi = 1180            yj = 350        mouse = pygame.mouse.get_pos()        win.fill((75, 139, 190))        button3(280, 300, 800, 120, blue, raily_)        button3(260, 620, 200, 150, blue, before_welcome)        button3(570, 620, 200, 150, blue, load_music)        button3(900, 620, 200, 150, blue, control_screen)        button3(120, 350, 100, 100, blue, welcome_screen)        win.blit(level_img, (0, 0))        win.blit(inter_img, (280, 330))        text_screen3("RAILY", rust, 558, 340)        win.blit(hb_img, (260, 620))        win.blit(pb_img, (570, 620))        win.blit(mb_img, (900, 620))        win.blit(more_button_1, (120, 350))        if 280 + 800 > mouse[0] > 280 and 300 + 120 > mouse[1] > 300:            win.blit(inter_2img, (255, 305))            text_screen4("RAILY", rust, 535, 330)        if 260 + 200 > mouse[0] > 260 and 620 + 150 > mouse[1] > 620:            win.blit(hb_2img, (235, 595))        if 570 + 200 > mouse[0] > 570 and 620 + 150 > mouse[1] > 620:            win.blit(pb_2img, (545, 595))        if 900 + 200 > mouse[0] > 900 and 620 + 150 > mouse[1] > 620:            win.blit(mb_2img, (875, 595))        win.blit(marking_img, (xi, yj))        pygame.display.update()        for event in pygame.event.get():            if event.type == pygame.QUIT:                exit_game = True            if event.type == pygame.KEYDOWN:                if event.key == pygame.K_SPACE:                    pygame.mixer.music.load("resources\\main.mp3")                    pygame.mixer.music.play()                    game_loop()                if event.key == pygame.K_ESCAPE:                    pygame.mixer.music.load(mn)                    pygame.mixer.music.play()                    before_welcome()                if event.key == pygame.K_q:                    pygame.quit()                    quit()def game_loop():    global pause, rect, raily    o = ["resources\\go go.mp3", "resources\\win.mp3", "resources\\win22.mp3"]    z = random.choice(o)    exit_game = False    game_over = False    snake_x = 100    snake_y = 100    snake_size = 35    fps = 30    velocity_x = 0    velocity_y = 0    food_x = random.randint(35, width - 75)    food_y = random.randint(35, height - 75)    score = 0    increase_velocity = 0    snk_list = []    snk_len = 1    if not os.path.exists("resources\\high score.txt"):        with open("resources\\high score.txt", "w") as m:            m.write("0")    with open("resources\\high score.txt", "r") as m:        high = m.read()    while not exit_game:        mouse = pygame.mouse.get_pos()        if game_over:            with open("resources\\high score.txt", "w") as m:                m.write(str(high))            button3(570, 600, 200, 150, blue, before_welcome)            win.fill(window_color)            win.blit(gameov_img, (0, 0))            text_screen5("GAME OVER", brown, 500, 0)            text_screen5("Your Score:- " + str(score), brown, 325, 200)            text_screen5("High Score:- " + high, brown, 325, 300)            text_screen5("Press Enter to continue", food_color, 200, 500)            win.blit(hb_img, (570, 600))            if 550 + 200 > mouse[0] > 550 and 600 + 150 > mouse[1] > 600:                win.blit(hb_2img, (545, 575))            for event in pygame.event.get():                if event.type == pygame.QUIT:                    exit_game = True                if event.type == pygame.KEYDOWN:                    if event.key == pygame.K_RETURN:                        pygame.mixer.music.load(z)                        pygame.mixer.music.play()                        welcome_screen()                    if event.key == pygame.K_ESCAPE:                        pygame.mixer.music.load(z)                        pygame.mixer.music.play()                        before_welcome()        else:            for event in pygame.event.get():                if event.type == pygame.QUIT:                    exit_game = True                if event.type == pygame.KEYDOWN:                    if event.key == pygame.K_RIGHT:                        velocity_x = 10 + increase_velocity                        velocity_y = 0                    if event.key == pygame.K_LEFT:                        velocity_x = - 10 - increase_velocity                        velocity_y = 0                    if event.key == pygame.K_UP:                        velocity_y = - 10 - increase_velocity                        velocity_x = 0                    if event.key == pygame.K_DOWN:                        velocity_y = 10 + increase_velocity                        velocity_x = 0                    if event.key == pygame.K_p:                        pause = True                        pygame.mixer.music.pause()                        paused()            if abs(snake_x - food_x) < 20 and abs(snake_y - food_y) < 20:                score += 10                increase_velocity += 0.5                if raily:                    if 0 < snake_x < ((width - 20) // 2) and 0 < snake_y < (height // 2):                        food_x = random.randint(((width - 20) // 2) + 10, width - 10)                        food_y = random.randint(20, (height // 2) - 10)                    elif ((width - 20) // 2) < snake_x < width and 0 < snake_y < (height // 2):                        food_x = random.randint(20, width - 10)                        food_y = random.randint((height // 2) + 10, height - 10)                    elif 0 < snake_x < width and (height // 2) < snake_y < height:                        food_x = random.randint(20, ((width - 20) // 2) - 10)                        food_y = random.randint(20, (height // 2) - 10)                else:                    food_x = random.randint(35, width - 75)                    food_y = random.randint(35, height - 75)                snk_len += 4                if score > int(high):                    high = score            snake_x += velocity_x            snake_y += velocity_y            win.fill(window_color)            win.blit(apple_img, (food_x, food_y))            head = [snake_x, snake_y]            snk_list.append(head)            if len(snk_list) > snk_len:                del snk_list[0]            if head in snk_list[:-1]:                pygame.mixer.music.load("resources\\game over.mp3")                pygame.mixer.music.play()                game_over = True            if mode == "Beginner":                text_screen("Score:- " + str(score) + "  High Score:- " + str(high), (255, 255, 255), 0, 0)                if snake_x < 0:                    snake_x = width                elif snake_x > width:                    snake_x = 0                elif snake_y < 0:                    snake_y = height - 10                elif snake_y > height:                    snake_y = 0            if mode == "Intermediate":                text_screen("Score:- " + str(score) + "  High Score:- " + str(high), (255, 255, 255), 23, 23)                rect_5 = pygame.rect.Rect(0, 0, 20, 250)                rect_6 = pygame.rect.Rect(0, (height - 250), 20, 250)                rect_7 = pygame.rect.Rect((width - 20), (height - 250), 20, 250)                rect_8 = pygame.rect.Rect((width - 20), 0, 20, 250)                rect_9 = pygame.rect.Rect(0, 0, 400, 20)                rect_10 = pygame.rect.Rect(0, (height - 20), 400, 20)                rect_11 = pygame.rect.Rect((width - 400), 0, 400, 20)                rect_12 = pygame.rect.Rect((width - 400), (height - 20), 400, 20)                pygame.draw.rect(win, rust, rect_5)                pygame.draw.rect(win, rust, rect_6)                pygame.draw.rect(win, rust, rect_7)                pygame.draw.rect(win, rust, rect_8)                pygame.draw.rect(win, rust, rect_9)                pygame.draw.rect(win, rust, rect_10)                pygame.draw.rect(win, rust, rect_11)                pygame.draw.rect(win, rust, rect_12)                if rect.colliderect(rect_5) or rect.colliderect(rect_6) or rect.colliderect(rect_7) or \                        rect.colliderect(rect_8) or rect.colliderect(rect_9) or rect.colliderect(rect_10) or \                        rect.colliderect(rect_11) or rect.colliderect(rect_12):                    pygame.mixer.music.load("resources\\game over.mp3")                    pygame.mixer.music.play()                    game_over = True                else:                    if snake_x < 0:                        snake_x = width                    elif snake_x > width:                        snake_x = 0                    elif snake_y < 0:                        snake_y = height - 10                    elif snake_y > height:                        snake_y = 0            if mode == "Advance":                text_screen("Score:- " + str(score) + "  High Score:- " + str(high), (255, 255, 255), 23, 23)                rect_1 = pygame.rect.Rect(0, 0, 20, height)                rect_2 = pygame.rect.Rect(0, 0, width, 20)                rect_3 = pygame.rect.Rect((width - 20), 0, 20, height)                rect_4 = pygame.rect.Rect(0, (height - 20), width, 20)                pygame.draw.rect(win, rust, rect_1)                pygame.draw.rect(win, rust, rect_2)                pygame.draw.rect(win, rust, rect_3)                pygame.draw.rect(win, rust, rect_4)                if rect.colliderect(rect_1) or rect.colliderect(rect_2) or rect.colliderect(rect_3) or \                        rect.colliderect(rect_4):                    pygame.mixer.music.load("resources\\game over.mp3")                    pygame.mixer.music.play()                    game_over = True            if mode == "Raily":                text_screen("Score:- " + str(score) + "  High Score:- " + str(high), (255, 255, 255), 23, 23)                rect_13 = pygame.rect.Rect(((width - 20) // 2), 0, 40, (height // 2))                rect_14 = pygame.rect.Rect(0, (height // 2), width, 40)                pygame.draw.rect(win, rust, rect_13)                pygame.draw.rect(win, rust, rect_14)                if rect.colliderect(rect_13) or rect.colliderect(rect_14):                    pygame.mixer.music.load("resources\\game over.mp3")                    pygame.mixer.music.play()                    game_over = True                if snake_x < 0:                    snake_x = width                elif snake_x > width:                    snake_x = 0                elif snake_y < 0:                    snake_y = height - 10                elif snake_y > height:                    snake_y = 0            if green_snake:                plot_snk(win, snake_color, snk_list, snake_size, snake_color2)            if yellow_snake:                plot_snk(win, yellow_color, snk_list, snake_size, yellow_color2)            if blue_snake:                plot_snk(win, blue_color, snk_list, snake_size, blue_color2)        pygame.display.update()        clock.tick(fps)    pygame.quit()    quit()interface(width, height)